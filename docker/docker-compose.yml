version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: enterprise_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: enterprise_backend
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - enterprise_network

  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: enterprise_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass password
    volumes:
      - redis_data:/data
    networks:
      - enterprise_network

  # Node.js Application
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: enterprise_app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      HOST: 0.0.0.0
      MONGODB_URI: mongodb://admin:password@mongodb:27017/enterprise_backend?authSource=admin
      REDIS_URL: redis://:password@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
    depends_on:
      - mongodb
      - redis
    volumes:
      - ../logs:/app/logs
    networks:
      - enterprise_network

  # Nginx (Load Balancer & Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: enterprise_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - enterprise_network

  # MongoDB Express (Database Admin UI)
  mongo-express:
    image: mongo-express:latest
    container_name: enterprise_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - enterprise_network

  # Redis Commander (Redis Admin UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: enterprise_redis_commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:password
    depends_on:
      - redis
    networks:
      - enterprise_network

volumes:
  mongodb_data:
  redis_data:
  nginx_logs:

networks:
  enterprise_network:
    driver: bridge
